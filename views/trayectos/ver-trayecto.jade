extend ../layouts/main
block content
	.container(ng-controller="VerTrayectoCtrl")
			.row
				.col-md-12.alertas
					.alert.alert-dismissable(ng-repeat="a in avisos", ng-class="{{ a.clase }}")
						button.cerrar-aviso.close(type="button", data-dismiss="alert", aria-hidden="true") &times;
						span.glyphicon.glyphicon-ok-sign 
						|  {{ a.texto }}
			.row
				.col-md-12
					h1 Trayecto
						small.pull-right
							a.btn.btn-success(ng-click="unirmeTrayecto()", ng-hide="unido_trayecto")
								span.glyphicon.glyphicon-plus-sign
								|  Unirse A Trayecto
							a.btn.btn-danger(ng-click="salirTrayecto()", ng-show="unido_trayecto")
								span.glyphicon.glyphicon-remove
								|  Salir del Trayecto
					.row
						.col-md-8
							.panel.panel-default.trayecto-div
								.panel-heading Informacion del Trayecto
								.panel-body
									.row
										.col-md-6
											table.table
												tr
													th Nº Plazas
													td {{ trayecto.Num_plazas }} ({{ trayecto.libres }} libres)
												tr 
													th Fecha Salida
													td {{ trayecto.Fecha_time }}
												tr 
													th Hora Salida
													td {{ trayecto.hora_salida }}
												tr
													th Restricciones
													td 
														span(ng-repeat="(key, r) in trayecto.Restricciones")
															{{ 	key.replace('_', ' ').toUpperCase() }}
															br

													
										.col-md-6
											table.table
												tr
													th Precio/Plaza
													td {{ trayecto.Precio_plaza }} €
												tr 
													th Max. Espera
													td {{ trayecto.Tiempo_max_espera }} minuto(s)
												tr 
													th Tamaño max. del equipaje
													td {{ trayecto.Max_tamanyo_equipaje }}
												tr
													th Tipo Pasajero
													td 
														span(ng-repeat="(key, r) in trayecto.Tipo_pasajeros")
															{{ 	key.replace('_', ' ').toUpperCase() }}
															br

									.row
										.col-md-12
											h4 Observaciones
											p {{ trayecto.Observaciones }}
						.col-md-4
							.panel.panel-default.creador-div
								.panel-heading 
									span.glyphicon.glyphicon-user  
									|  Creador
								.panel-body 
									table.table
										tr
											th Nombre
											td {{ usuario.nombre }}
										tr 
											th Coche
											td {{ usuario.coche.marca }} {{ usuario.coche.modelo }} 
												| {{ usuario.coche.color }} {{ usuario.coche.anyo }}
										tr 
											th Escuela
											td {{ usuario.escuela }}
							
			.row
				.col-md-12
					.panel.panel-default
						.panel-heading 
							span.glyphicon.glyphicon-road 
							|  Ruta
						.panel-body
							.row
								.col-md-6
									table.table
										tr 
											th Origen
											td {{ trayecto.Origen }}
								.col-md-6
									table.table
										tr 
											th Destino
											td {{ trayecto.Destino }}
							.row
								.col-md-12
									div#map(style="width: 100%; height: 400px")

block script
	script(src="/js/VerTrayectoCtrl.js")
	script.
		var scope;
		$(document).ready(function(){
			scope = angular.element('[ng-controller="VerTrayectoCtrl"]').scope();
			//- scope.current_user = "from_site";
			scope.current_user = !{ userId };
			scope.$apply();
			scope.getTrayecto(JSON.parse('!{trayecto}'));
			scope.$apply();

			var h = $('.trayecto-div').height();
			$('.creador-div').css('height', h + 40);

			$('.alertas').on('click', '.cerrar-aviso', function(e){
				e.preventDefault();
				scope.avisos = [];
				scope.$apply();
			});

			drawRoute();
		});

		var map = new GMaps({
			div: '#map',
			lat: 39.481289,
			lng: -0.3425168
		});
		var route = null;

		function drawRoute(){
			if(scope != undefined){
				map.getRoutes({
					origin: scope.trayecto.Origen_latlng,
					destination: scope.trayecto.Destino_latlng,
					travelMode: 'driving',
					callback: function(e){
						console.log(e);
						var i = e.length - 1;
						route = new GMaps.Route({
							map: map,
							route: e[i],
							strokeColor: '#336699',
							strokeOpacity: 0.5,
							strokeWeight: 6,
							draggable: true
						});
						paintRoute();
					}
				});

				map.addMarker({
					lat: scope.trayecto.Origen_latlng[0],
					lng: scope.trayecto.Origen_latlng[1],
					icon: '/img/inicio.png'
				});

				map.addMarker({
					lat: scope.trayecto.Destino_latlng[0],
					lng: scope.trayecto.Destino_latlng[1],
					icon: '/img/meta_centro.png'
				});
			}
		}

		function paintRoute(){
			for(var i = 0; i < route.steps_length; i++){
				route.forward();
			}

			var center = Math.floor(route.steps.length / 2) + 1;
			var latLng = route.steps[center].start_location;
			map.setCenter(latLng.lat() , latLng.lng());
			map.setZoom(14);
		}
